/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package moddydev.java.decompiler;

import java.awt.Image;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Moddy
 */
public class JavaDecompiler extends javax.swing.JFrame {

    MetodosArchivos ma = new MetodosArchivos();
    String userName = System.getProperty("user.name");
    
    /**
     * Creates new form JavaDecompiler
     */
    public JavaDecompiler() {
        initComponents();
        
        setIconImage(getIconImage());
        setTitle("Java Decompiler");
        
        String carpetName = "C:\\Users\\" + userName + "\\Documents\\outputsJD";
        boolean f = ma.crearCarpeta(carpetName);
    }
    
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Imagenes/icon.png"));
        return retValue;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldEntrada = new javax.swing.JTextField();
        jTextFieldDestino = new javax.swing.JTextField();
        generador = new javax.swing.JButton();
        ejecutador = new javax.swing.JButton();
        jTextFieldCarpet = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        listlog = new java.awt.List();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        newConvertion = new javax.swing.JMenuItem();
        clearLog = new javax.swing.JMenuItem();
        aboutOption = new javax.swing.JMenuItem();
        exitOptionMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jTextFieldEntrada.setToolTipText("");

        generador.setText("Generar comando");
        generador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generadorMouseClicked(evt);
            }
        });

        ejecutador.setText("Ejecutar");
        ejecutador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ejecutadorMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Direccion");

        jLabel3.setText("Carpeta con archivos");

        jLabel4.setText("Destino");

        jLabel5.setText("Output");

        jButton1.setText("COPIAR");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jMenu1.setText("File");

        newConvertion.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        newConvertion.setText("New");
        newConvertion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newConvertionActionPerformed(evt);
            }
        });
        jMenu1.add(newConvertion);

        clearLog.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.ALT_DOWN_MASK));
        clearLog.setText("Clear Log");
        clearLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearLogActionPerformed(evt);
            }
        });
        jMenu1.add(clearLog);

        aboutOption.setText("About");
        aboutOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutOptionActionPerformed(evt);
            }
        });
        jMenu1.add(aboutOption);

        exitOptionMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        exitOptionMenu.setText("Exit");
        exitOptionMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitOptionMenuActionPerformed(evt);
            }
        });
        jMenu1.add(exitOptionMenu);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldCarpet, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(listlog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(generador)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ejecutador, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jTextFieldEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldCarpet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generador)
                    .addComponent(ejecutador))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listlog, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    String first = "\"C:\\Program Files\\JavaDecompiler-by-Moddy\\java-decompiler.jar\"";
    String second = "org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler -dgs=true";
    String carpet = "";
    String entrada = "";
    String destino = "";
    String comando;
    
    private void generadorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generadorMouseClicked
        entrada = jTextFieldEntrada.getText() + "/";
        destino = jTextFieldDestino.getText() + "/";
        
        if (!jTextFieldEntrada.getText().isEmpty() && !jTextFieldDestino.getText().isEmpty()){
            comando = "java -cp " + first + " " + second + " " + entrada + " " + destino;
            listlog.add("> generar comando: Comando Generado");
        }else{
            listlog.add("> Error: generar comando: Rellene los siguientes campos -> Carpeta con archivos y Destino");
        }
    }//GEN-LAST:event_generadorMouseClicked

    private void ejecutadorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ejecutadorMouseClicked
        listlog.add("> ejecutar: Comprobando .");
        
        if (!jTextFieldEntrada.getText().isEmpty() && !jTextFieldDestino.getText().isEmpty() && !jTextFieldCarpet.getText().isEmpty()){
            listlog.add("> ejecutar: Comprobado");
            
            carpet = jTextFieldCarpet.getText();
            entrada = jTextFieldEntrada.getText() + "/";
            destino = jTextFieldDestino.getText() + "/";
            
            listlog.add("> ejecutar: Estableciendo Comandos");
            
            String cm1 = "cd "+ carpet;
            String cm2 = "java -cp " + first + " " + second + " " + entrada + " " + destino;
            
            listlog.add("> ejecutar: Armando Comandos");
        
            String uni = jTextFieldEntrada.getText()+"decompilador.bat";
            String df = "C:\\Users\\"+ userName + "\\Documents\\outputsJD\\"+ uni;
            
            listlog.add("> ejecutar: Creando archivo en archivos temporales .");
        
            ma.crearArchivo(df);
            
            listlog.add("> ejecutar: Estableciendo Comandos ...");
            
            listlog.add("> ejecutar: Escribiendo archivo .");
            
            ma.escribirArchivo(df, cm1, false, true);
            
            listlog.add("> ejecutar: Escribiendo archivo ..");
            
            ma.escribirArchivo(df, cm2, false, true);
            
            listlog.add("> ejecutar: Escribiendo archivo ...");
            
            listlog.add("> ejecutar: Archivo generado");
            
            listlog.add("> ejecutar: Copia y pega lo siguiente en la barra de busqueda de tu explorador de archivos");
            listlog.add("> ejecutar: C:\\Users\\"+userName+"\\Documents\\outputsJD");
            comando = "C:\\Users\\"+userName+"\\Documents\\outputsJD";
            listlog.add("> ejecutar: Encuentra el archivo Decompilador.bat.txt");
            listlog.add("> ejecutar: Lee el archivo corroborando que no tiene malware");
            listlog.add("> ejecutar: Si ya corroboraste puedes borrar la extencion .txt y ejecutar el programa :)");
            listlog.add("> ejecutar: Busque en su carpeta de Documentos");
        }else{
            listlog.add("> ejecutar: Comprobando ...");
            listlog.add("> ejecutar: Comprobado");
            listlog.add("> Error: ejecutar: Rellene Todos Los campos");
        }
    }//GEN-LAST:event_ejecutadorMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();
        StringSelection strSel = new StringSelection(comando);
        
        cb.setContents(strSel, null);
    }//GEN-LAST:event_jButton1MouseClicked

    private void exitOptionMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitOptionMenuActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitOptionMenuActionPerformed

    private void newConvertionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newConvertionActionPerformed
        comando = "";
        carpet = "";
        entrada = "";
        destino = "";
        listlog.removeAll();
        jTextFieldCarpet.setText("");
        jTextFieldEntrada.setText("");
        jTextFieldDestino.setText("");
    }//GEN-LAST:event_newConvertionActionPerformed

    private void clearLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearLogActionPerformed
        listlog.removeAll();
    }//GEN-LAST:event_clearLogActionPerformed

    private void aboutOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutOptionActionPerformed
        try {
            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + "https://www.javadecompiler.ga");
        } catch (IOException ex) {
            Logger.getLogger(JavaDecompiler.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_aboutOptionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JavaDecompiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JavaDecompiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JavaDecompiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JavaDecompiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JavaDecompiler().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutOption;
    private javax.swing.JMenuItem clearLog;
    private javax.swing.JButton ejecutador;
    private javax.swing.JMenuItem exitOptionMenu;
    private javax.swing.JButton generador;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JTextField jTextFieldCarpet;
    private javax.swing.JTextField jTextFieldDestino;
    private javax.swing.JTextField jTextFieldEntrada;
    private java.awt.List listlog;
    private javax.swing.JMenuItem newConvertion;
    // End of variables declaration//GEN-END:variables
}
